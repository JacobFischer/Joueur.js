// Generated by Creer at 10:56PM on April 20, 2016 UTC, git hash: '087b1901032ab5bed5806b24830233eac5c2de55'
// This is a simple class to represent the Weaver object in the game. You can extend it by adding utility functions here in this file.

var Class = require(__basedir + "/joueur/class");
var client = require(__basedir + "/joueur/client");
var Spiderling = require("./spiderling");


//<<-- Creer-Merge: requires -->> - Code you add between this comment and the end comment will be preserved between Creer re-runs.
// any additional requires you want can be required here safely between creer runs
//<<-- /Creer-Merge: requires -->>

/**
 * @class
 * @classdesc A Spiderling that can alter existing Webs by weaving to add or remove silk from the Webs, thus altering its strength.
 * @extends Spiderling
 */
var Weaver = Class(Spiderling, {
    /**
     * initializes a Weaver with basic logic as provided by the Creer code generator
     *
     * @memberof Weaver
     * @private
     */
    init: function() {
        Spiderling.init.apply(this, arguments);


        // The following values should get overridden when delta states are merged, but we set them here as a reference for you to see what variables this class has.


        /**
         * The Web that this Weaver is strengthening. Null if not strengthening.
         *
         * @name Weaver#strengtheningWeb
         * @type Web
         */
        this.strengtheningWeb = null;

        /**
         * The Web that this Weaver is weakening. Null if not weakening.
         *
         * @name Weaver#weakeningWeb
         * @type Web
         */
        this.weakeningWeb = null;

        //<<-- Creer-Merge: init -->> - Code you add between this comment and the end comment will be preserved between Creer re-runs.
        // any additional init logic you want can go here
        //<<-- /Creer-Merge: init -->>

    },


    /**
     * Weaves more silk into an existing Web to strengthen it.
     *
     * @memberof Weaver
     * @instance
     * @param {Web} web - The web you want to strengthen. Must be connected to the Nest this Weaver is currently on.
     * @returns {boolean} - True if the strengthen was successfully started, false otherwise.
     */
    strengthen: function(web) {
        return client.runOnServer(this, "strengthen", {
            web: web,
        });
    },

    /**
     * Weaves more silk into an existing Web to strengthen it.
     *
     * @memberof Weaver
     * @instance
     * @param {Web} web - The web you want to weaken. Must be connected to the Nest this Weaver is currently on.
     * @returns {boolean} - True if the weaken was successfully started, false otherwise.
     */
    weaken: function(web) {
        return client.runOnServer(this, "weaken", {
            web: web,
        });
    },


    //<<-- Creer-Merge: functions -->> - Code you add between this comment and the end comment will be preserved between Creer re-runs.
    // any additional functions you want to add to this class can be perserved here
    //<<-- /Creer-Merge: functions -->>

});

module.exports = Weaver;
